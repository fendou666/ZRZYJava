package com.chinasoft.manage;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;

import com.chinasoft.po.Order;
import com.chinasoft.po.User;

public class UserManage {
	private User u;
//	根据状态将所有订单分类(创建状态，发货状态，已签收)
	private HashMap<String, ArrayList<Order>> adminOrder;
//	构造函数，即用户初始化，初始化用户的信息以及用户的订单
	
	public UserManage(){
		System.out.println("不可调用");
	}

	public UserManage(User u) {
		this.u = u;
		orderSort();
	}
	public void orderSort(){
		adminOrder = new HashMap<String, ArrayList<Order>>();
//		未发货
		adminOrder.put("NoShipments", new ArrayList<Order>());
//		已发货
		adminOrder.put("Shipments", new ArrayList<Order>());
//		没有订单
		if(u.getOrderList().size()==0){
			return;
		}
		Iterator<Order> iterator = u.getOrderList().iterator();
		Order partOd;
		while(iterator.hasNext()){
			partOd = iterator.next();
			if(partOd.getStatus().equals("未发货")){
				adminOrder.get("NoShipments").add(partOd);
			}else if(partOd.getStatus().equals("已发货")){
				adminOrder.get("Shipments").add(partOd);
			}
		}
	}
	
	
//	订单管理
//	1.订单创建，然后调用管理的未发货订单增加方法
	public void addOrder(Order od){
		u.getOrderList().add(od);
		adminOrder.get("NoShipments").add(od);
	}
//	2.订单查找，管理员对于订单发货处理后，订单状态查找
	public void addOrder(Order od){
		u.getOrderList().add(od);
		adminOrder.get("NoShipments").add(od);
	}
//	3.订单更新，主要是将订单设置为已签收状态
}
